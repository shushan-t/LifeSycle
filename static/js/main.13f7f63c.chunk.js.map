{"version":3,"sources":["logo.svg","LifeCyrcleReact/header.js","LifeCyrcleReact/unmount.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","favoritecolor","bool","changeColor","setState","console","log","alert","setTimeout","nextProps","nextState","prevProps","prevState","document","getElementById","innerHTML","this","style","color","className","type","onClick","id","Component","Unmount","useState","changeBool","favcol","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2NAAe,I,+CCmFAA,E,4MA5EXC,MAAQ,CACNC,cAAe,gBACfC,MAAK,G,EAiDTC,YAAc,WACZ,EAAKC,SAAS,CACZH,cAAe,WACfC,MAAK,K,0DA7CT,WACEG,QAAQC,IAAI,0BACZC,MAAM,0D,+BAaP,WAAqB,IAAD,OACnBC,YAAW,WACT,EAAKJ,SAAS,CAACH,cAAe,iBAC7B,O,mCAIJ,SAAsBQ,EAAWC,GAC/B,MAA+B,kBAA5BA,EAAUT,eAAiE,eAA5BS,EAAUT,eAA6D,aAA5BS,EAAUT,gB,qCAMzG,SAAwBU,EAAWC,GACjCC,SAASC,eAAe,QAAQC,UAChC,uCAAyCH,EAAUX,gB,gCAItD,SAAmBU,GACdK,KAAKhB,MAAMC,gBAAmBU,EAAUV,gBAC3CY,SAASC,eAAe,QAAQC,UAChC,2BAA6BC,KAAKhB,MAAMC,iB,oBAa1C,WACE,OACE,gCACA,sDACA,uBAAOgB,MAAO,CAACC,MAAOF,KAAKhB,MAAMC,eAAjC,cAAmDe,KAAKhB,MAAMC,oBAE9D,wBAAQkB,UAAS,UAAKH,KAAKhB,MAAME,MAAQ,UAAYkB,KAAK,SAASC,QAASL,KAAKb,YAAjF,0BACA,qBAAKmB,GAAG,OAAOL,MAAO,CAACC,MAAO,mBAC9B,qBAAKI,GAAG,OAAOL,MAAO,CAACC,MAAOF,KAAKhB,MAAMC,wB,GAxE1BsB,aCqBJC,EArBD,WACZ,MAA2BC,oBAAS,GAApC,mBAAOvB,EAAP,KAAawB,EAAb,KAUA,OACE,gCACGxB,EAAM,KAAO,wBAAQiB,UAAS,UAAKjB,GAAQ,UAAYmB,QAV5C,WACdK,GAAW,IASK,8BACbxB,EAAM,wBAAQiB,UAAS,WAAMjB,GAAQ,UAAYmB,QAPxC,WACVK,GAAW,IAMJ,mBAA4E,cAAC,EAAD,CAAQC,OAAO,uBCL3FC,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCKSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASC,eAAe,SAM1Be,M","file":"static/js/main.13f7f63c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Component} from \"react\";\r\n\r\n\r\nclass Header extends Component {\r\n  \r\n //The constructor method is called, by React, every time you make a component: \r\n \r\n    state = {\r\n      favoritecolor: \"LightSeaGreen\",\r\n      bool:false\r\n    };\r\n  \r\n  \r\n //The componentWillUnmount method is called when the component is \r\n  //about to be removed from the DOM. \r\n  \r\n  componentWillUnmount(){\r\n    console.log(\"Component will unmount\");\r\n    alert(\"The component named Header is about to be unmounted.\");\r\n  }\r\n\r\n  \r\n //The getDerivedStateFromProps() method is called right before rendering \r\n  \r\n//   static getDerivedStateFromProps(props, state) {\r\n//     return {favoritecolor: props.favcol };\r\n//   }\r\n  \r\n  \r\n //The componentDidMount() method is called after the component is rendered.\r\n  \r\n   componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({favoritecolor: 'LightCoral'})\r\n    }, 1000)\r\n  }\r\n  \r\n  \r\n   shouldComponentUpdate(nextProps, nextState) {\r\n     if(nextState.favoritecolor === \"LightSeaGreen\" || nextState.favoritecolor === \"LightCoral\"|| nextState.favoritecolor === \"DeepPink\"){\r\n        return true;\r\n     };\r\n     return false;\r\n } \r\n  \r\n   getSnapshotBeforeUpdate(prevProps, prevState) {\r\n     document.getElementById(\"div1\").innerHTML =\r\n     \"Before the update, the favorite was \" + prevState.favoritecolor;\r\n    \r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    if(this.state.favoritecolor !==  prevProps.favoritecolor){\r\n    document.getElementById(\"div2\").innerHTML =\r\n    \"The updated favorite is \" + this.state.favoritecolor;   };\r\n   \r\n  }\r\n  \r\n  changeColor = () => {\r\n    this.setState({\r\n      favoritecolor: \"DeepPink\",\r\n      bool:true\r\n     \r\n    });\r\n  }\r\n \r\n  \r\n  render() { \r\n    return (\r\n      <div>\r\n      <h1 >My Favorite Color is \r\n      <span  style={{color: this.state.favoritecolor}}> {this.state.favoritecolor}</span>\r\n      </h1>\r\n      <button className={`${this.state.bool && \"button\"}`} type=\"button\" onClick={this.changeColor}>Change color</button>\r\n      <div id=\"div1\" style={{color: \"LightSeaGreen\"}}></div>\r\n      <div id=\"div2\" style={{color: this.state.favoritecolor}}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Header; \r\n\r\n\r\n","import {useState} from 'react';\r\nimport Header from './header';\r\n\r\nconst Unmount = () => {\r\n    const [bool, changeBool] = useState(false)\r\n\r\n    const unmount = () => {\r\n      changeBool(true)\r\n    }\r\n \r\n    const mount = () => {\r\n        changeBool(false)\r\n      }\r\n\r\n    return(\r\n      <div>\r\n        {bool? null : <button className={`${bool && \"button\"}`} onClick={unmount}>Click to unmount</button>}\r\n        {bool? <button className={`${!bool && \"button\"}`} onClick={mount}>Reset</button> : <Header favcol=\"CornflowerBlue\"/>}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n    \r\n  \r\n  export default Unmount; ","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Unmount from './LifeCyrcleReact/unmount';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Unmount />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}